# Este fichero sirve para crear en azure la máquina virtual que alojará ambos
# microservicios:

# Especificar el uso de la versión 1.1+ hasta 2.0.x de vagrant
Vagrant.configure("2") do |config|
  
  # Configurar la box
  config.vm.box = "azure"

  # Configurar ruta a la clave privada para conectar remotamente
  # al vagrant box
  config.ssh.private_key_path = '~/.ssh/id_rsa'

  # Establece la configuración de la máquina para un proveedor específico
  # Crea una variable, en mi caso llamada azure para realizar la configuración
  config.vm.provider :azure do |azure|

    # Parámetros para los datos de la suscripción de Azure
    # Establece variables de entorno para poder asignarles el valor
    azure.tenant_id = ENV['AZURE_TENANT_ID']
    azure.client_id = ENV['AZURE_CLIENT_ID']
    azure.client_secret = ENV['AZURE_CLIENT_SECRET']
    azure.subscription_id = ENV['AZURE_SUBSCRIPTION_ID']

    # Nombre de la máquina virtual
    azure.vm_name = "ccmastergestionpedidos"

    # Nombre de usuario del administrador de la Máquina Virtual
    azure.admin_username = "toniMR"

    # Puerto por el que nos conectaremos a la máquina
    azure.tcp_endpoints = '8000'
    azure.tcp_endpoints = '8080'

    # Región en la que se creará la máquina
    # France central
    azure.location = 'francecentral'

    # Especificar os recursos que le proporcionaremos a la máquina
    # Standard_F4s:
    # vCPU: 4
    # Memoria: 8 GiB
    # He escogido esta porque el maximo de cores que me permiten en la
    # suscripción es 4. Standard_F4s
    azure.vm_size = "Standard_F4s"

    # Especificar la imagen a montar en la máquina
    azure.vm_image_urn = 'Canonical:UbuntuServer:18.04-LTS:latest'

    # Especificar grupo de recursos
    azure.resource_group_name = 'CCGestionPedidos'
  end


  config.vm.define "gp_azure" do |gestionpedidos|
    # Establecer configuración de provisionamiento
    config.vm.provision :ansible do |ansible|
      # Indica la ruta en la que encuentra el archivo playbook.yml
      ansible.playbook = "../playbook-azure.yml"
    end
  end
end